// Generated by CoffeeScript 1.6.2
(function() {
  var deg2rad, displayRoutesDistance, drawRoutes, getDistanceFromLatLonInKm, getTotalDistance, initializeMap;

  initializeMap = function() {
    var mapOptions;

    mapOptions = {
      center: new google.maps.LatLng(15, 15),
      zoom: 3,
      mapTypeId: google.maps.MapTypeId.ROADMAP
    };
    return new google.maps.Map($("#map-canvas")[0], mapOptions);
  };

  drawRoutes = function(routes, map) {
    var latlngbounds, mapPoints, point, polyline, pt, route, segment, _i, _j, _k, _len, _len1, _len2, _ref;

    latlngbounds = new google.maps.LatLngBounds();
    for (_i = 0, _len = routes.length; _i < _len; _i++) {
      route = routes[_i];
      _ref = route['segments'];
      for (_j = 0, _len1 = _ref.length; _j < _len1; _j++) {
        segment = _ref[_j];
        mapPoints = [];
        for (_k = 0, _len2 = segment.length; _k < _len2; _k++) {
          point = segment[_k];
          pt = new google.maps.LatLng(point['lat'], point['lon']);
          mapPoints.push(pt);
          latlngbounds.extend(pt);
        }
        polyline = new google.maps.Polyline({
          path: mapPoints,
          editable: false,
          draggable: false,
          geodesic: true,
          strokeColor: '#FF0000',
          strokeOpacity: 1.0,
          strokeWeight: 2
        });
        polyline.setMap(map);
      }
    }
    return map.fitBounds(latlngbounds);
  };

  getTotalDistance = function(routes) {
    var distance, i, pt1, pt2, route, segment, x, _i, _j, _k, _len, _len1, _ref, _ref1;

    distance = 0;
    for (_i = 0, _len = routes.length; _i < _len; _i++) {
      route = routes[_i];
      _ref = route['segments'];
      for (_j = 0, _len1 = _ref.length; _j < _len1; _j++) {
        segment = _ref[_j];
        for (i = _k = 1, _ref1 = segment.length - 1; 1 <= _ref1 ? _k <= _ref1 : _k >= _ref1; i = 1 <= _ref1 ? ++_k : --_k) {
          pt1 = segment[i - 1];
          pt2 = segment[i];
          x = getDistanceFromLatLonInKm(pt1['lat'], pt1['lon'], pt2['lat'], pt2['lon']);
          distance += x;
        }
      }
    }
    return distance;
  };

  getDistanceFromLatLonInKm = function(lat1, lon1, lat2, lon2) {
    var R, a, c, d, dlat, dlon;

    R = 6371;
    dlat = deg2rad(lat2 - lat1);
    dlon = deg2rad(lon2 - lon1);
    a = Math.sin(dlat / 2) * Math.sin(dlat / 2) + Math.cos(deg2rad(lat1)) * Math.cos(deg2rad(lat2)) * Math.sin(dlon / 2) * Math.sin(dlon / 2);
    c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));
    d = R * c;
    return d;
  };

  deg2rad = function(deg) {
    return deg * (Math.PI / 180);
  };

  displayRoutesDistance = function(routesJSON) {
    var distance;

    distance = getTotalDistance(routesJSON);
    distance = Math.round(distance * 100) / 100;
    return $("#total-distance").html(distance + " km");
  };

  window.main = function(routesJSON) {
    var map;

    if (!$.isEmptyObject(routesJSON)) {
      map = initializeMap();
      drawRoutes(routesJSON, map);
      return displayRoutesDistance(routesJSON);
    }
  };

}).call(this);
