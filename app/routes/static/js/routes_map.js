// Generated by CoffeeScript 1.6.2
(function() {
  var bindToFileInputChange, displayRelatedRoute, fileUploadChangeState, fillFormFields, handleNewRoute, main, sendFile, validateFileExtansion;

  bindToFileInputChange = function(mapHandler) {
    var $form;

    $form = $('#gpx-file-input-form');
    return $form.find("input:file").change(function() {
      return sendFile($form, mapHandler);
    });
  };

  sendFile = function($form, mapHandler) {
    var $inputField, csrfToken, fd, xhr;

    $inputField = $form.find("input:file");
    if (validateFileExtansion($inputField)) {
      xhr = new XMLHttpRequest();
      xhr.open("POST", $form.data('url'));
      csrfToken = $.cookie('csrftoken');
      if (csrfToken) {
        xhr.setRequestHeader("X-CSRFToken", csrfToken);
      }
      xhr.onreadystatechange = function() {
        return fileUploadChangeState(xhr, mapHandler);
      };
      fd = new FormData($form.get(0));
      return xhr.send(fd);
    }
  };

  validateFileExtansion = function($inputField) {
    var extention;

    extention = $inputField.val().split(".").pop().toLowerCase();
    if (extention === 'gpx') {
      return true;
    } else {
      alert("To nie jest właściwy rodzaj pliku - wybierz plik .gpx");
      return false;
    }
  };

  fileUploadChangeState = function(xhr, mapHandler) {
    var response, routeId, routes;

    if (xhr.readyState === 4 && xhr.status === 200) {
      response = JSON.parse(xhr.responseText);
      routeId = response['id'];
      routes = JSON.parse(response['tracks']);
      handleNewRoute(mapHandler, routes);
      return fillFormFields(routeId, mapHandler);
    } else if (xhr.readyState === 4) {
      return alert("Something went wrong. Error" + xhr.status);
    }
  };

  handleNewRoute = function(mapHandler, routes) {
    if (!mapHandler.map) {
      mapHandler.initializeMap();
    }
    mapHandler.singleNewRoute(routes);
    return $("#map-canvas").show();
  };

  fillFormFields = function(routeId, mapHandler) {
    $('#id_route_id').val(routeId);
    $('#id_distance').val(mapHandler.distance.toFixed(2));
    $('#id_datetime_start').val(mapHandler.startTime.format('DD-MM-YYYY'));
    $('#id_time_start').val(mapHandler.startTime.format('HH:mm:ss'));
    $('#id_duration_hours').val(mapHandler.duration.hours());
    $('#id_duration_mins').val(mapHandler.duration.minutes());
    return $('#id_duration_secs').val(mapHandler.duration.seconds());
  };

  displayRelatedRoute = function(routeId, url, mapHandler) {
    return $.ajax({
      url: url,
      data: {
        'route_id': routeId
      },
      success: function(data, textStatus, jqXHR) {
        return handleNewRoute(mapHandler, JSON.parse(data['route']));
      },
      dataType: "json"
    });
  };

  main = function() {
    var mapCanvas, mapHandler, routeId;

    mapCanvas = $("#map-canvas");
    if (mapCanvas[0]) {
      mapHandler = new RoutesMapHandler();
      bindToFileInputChange(mapHandler);
      routeId = mapCanvas.data("route-id");
      if (routeId) {
        return displayRelatedRoute(routeId, mapCanvas.data("url"), mapHandler);
      } else {
        return mapCanvas.hide();
      }
    }
  };

  $(function() {
    return main();
  });

}).call(this);
